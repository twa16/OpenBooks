/*
 * The MIT License
 *
 * Copyright 2014 mgauto.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

package org.mgenterprises.openbooks.views.panel.accounting;

import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.MutableTreeNode;
import org.mgenterprises.openbooks.OpenbooksCore;
import org.mgenterprises.openbooks.accounting.account.Account;
import org.mgenterprises.openbooks.accounting.account.AccountManager;
import org.mgenterprises.openbooks.views.ViewChangeListener;

/**
 *
 * @author mgauto
 */
public class AccountListPanel extends javax.swing.JPanel implements ViewChangeListener{
    private OpenbooksCore openbooksCore;
    /**
     * Creates new form AccountListPanel
     */
    public AccountListPanel(OpenbooksCore openbooksCore) {
        this.openbooksCore = openbooksCore;
        try {
            //Call the methods the populates our fields
            loadAccounts();
        } catch (IOException ex) {
            Logger.getLogger(AccountListPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
    }

    /**
     * Gets all accounts and loads the JTree
     * @throws IOException 
     */
    private void loadAccounts() throws IOException {
        //Get the account manager
        AccountManager accountManager = openbooksCore.getAccountManager();
        //Get all accounts from the account manager
        ArrayList<Account> accounts = accountManager.values();
        //Create the root node
        MutableTreeNode accountRootNode = new DefaultMutableTreeNode();
        //Set the root node's title
        accountRootNode.setUserObject("Accounts");
        //Create the model for the Accounts tree
        DefaultTreeModel accountTreeModel = new DefaultTreeModel(accountRootNode);
        for(Account account : accounts) {
            //TreeNode for this account
            MutableTreeNode accountNode = new DefaultMutableTreeNode();
            //String representation of the account
            String accountData = account.getAccountName()+" "+account.getAccountBalance()+" "+account.getAccountDescription();
            //Set data on accountNode
            accountNode.setUserObject(accountData);
            //Add the node to our JTree
            accountTreeModel.insertNodeInto(accountNode, accountRootNode, accountTreeModel.getChildCount(accountRootNode));
        }
        //Set the model on the JTree
        this.accountsList.setModel(accountTreeModel);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        accountsList = new javax.swing.JTree();

        setMinimumSize(new java.awt.Dimension(850, 650));

        jScrollPane1.setViewportView(accountsList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree accountsList;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onSwitchTo(Object object) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void onSwitchFrom() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
